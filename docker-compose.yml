version: '3'

services:
  ibmmq:
    image: ibmcom/mq:latest
    environment:
      LICENSE: accept
      MQ_QMGR_NAME: QM1
      MQ_APP_PASSWORD: passw0rd
    ports:
      - "1414:1414"
      - "9443:9443"
    volumes:
      - mq-data:/var/mqm
    networks:
      - app_network
  
  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_USER: cacib
      POSTGRES_PASSWORD: cacib
      POSTGRES_DB: messagesdb
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
  
  payment-router-backend:
    build: ./messages-router
    depends_on:
      - postgres
      - ibmmq
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/messagesdb
      SPRING_DATASOURCE_USERNAME: cacib
      SPRING_DATASOURCE_PASSWORD: cacib
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      IBM_MQ_CONN_NAME: ibmmq(1414)
      IBM_MQ_QUEUE_MANAGER: QM1
      IBM_MQ_CHANNEL: DEV.APP.SVRCONN
      IBM_MQ_USER: app
      IBM_MQ_PASSWORD: passw0rd
      IBM_MQ_QUEUE_NAME: DEV.QUEUE.1
    ports:
      - "8080:8080"
    networks:
      - app_network
  
  messages-router-frontend:
    build: ./mesages-router-frontend
    ports:
      - "80:80"
    depends_on:
      - payment-router-backend
    networks:
      - app_network

volumes:
  mq-data:
  postgres_data:


networks:
  app_network:
    driver: bridge